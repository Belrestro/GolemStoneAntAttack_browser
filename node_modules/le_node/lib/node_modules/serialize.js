'use strict';

var _toConsumableArray = require('babel-runtime/helpers/to-consumable-array')['default'];

var _Object$defineProperty = require('babel-runtime/core-js/object/define-property')['default'];

var _Map = require('babel-runtime/core-js/map')['default'];

var _Set = require('babel-runtime/core-js/set')['default'];

var _WeakMap = require('babel-runtime/core-js/weak-map')['default'];

var _WeakSet = require('babel-runtime/core-js/weak-set')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

_Object$defineProperty(exports, '__esModule', {
	value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _jsonStringifySafe = require('json-stringify-safe');

var _jsonStringifySafe2 = _interopRequireDefault(_jsonStringifySafe);

var stackDelim = /\n\s*/g;

var pass = function pass(key, val) {
	return val;
};

var isNewIterable = function isNewIterable(val) {
	return _Map && val instanceof _Map || _Set && val instanceof _Set || _WeakMap && val instanceof _WeakMap || _WeakSet && val instanceof _WeakSet;
};

var build = function build(_ref) {
	var flatten = _ref.flatten;
	var flattenArrays = _ref.flattenArrays;
	var _ref$replacer = _ref.replacer;
	var replacer = _ref$replacer === undefined ? pass : _ref$replacer;
	var withStack = _ref.withStack;

	var replace = _lodash2['default'].flow(replacer, function (val) {
		if (_lodash2['default'].isObject(val) && !Object.getPrototypeOf(val)) return val;

		if (_lodash2['default'].isNaN(val)) return 'NaN';
		if (val === Infinity) return 'Infinity';
		if (val === -Infinity) return '-Infinity';
		if (1 / val === -Infinity) return '-0';
		if (typeof val == 'symbol') return val.toString();

		if (_lodash2['default'].isError(val)) return errReplacer(val, withStack);
		if (_lodash2['default'].isArguments(val)) return _lodash2['default'].toArray(val);
		if (_lodash2['default'].isRegExp(val)) return val.toString();
		if (isNewIterable(val)) return [].concat(_toConsumableArray(val));

		return val;
	});

	var serialize = _lodash2['default'].partial(_jsonStringifySafe2['default'], _lodash2['default'], replace);

	return flatten ? flat(serialize, flattenArrays) : serialize;
};

exports.build = build;
var errReplacer = function errReplacer(val, withStack) {

	var err = { name: val.name || 'Error', message: val.message };

	for (var prop in val) {
		err[prop] = val[prop];
	}

	if (withStack) err.stack = val.stack && val.stack.split(stackDelim);

	return err;
};

var flat = function flat(serialize, arraysToo) {
	return function (obj) {
		obj = JSON.parse(serialize(obj));

		if (!_lodash2['default'].isObject(obj)) return obj;

		var flatObj = _lodash2['default'].reduce(obj, function _flat(target, val, key) {

			var keyContext = this.slice();

			keyContext.push(key);

			key = keyContext.join('.');

			if (!_lodash2['default'].isObject(val)) target[key] = val;else if (!arraysToo && _lodash2['default'].isArray(val)) target[key] = val.map(function (val) {
				if (!_lodash2['default'].isObject(val)) return val;

				return _lodash2['default'].reduce(val, _flat, {}, []);
			});else _lodash2['default'].reduce(val, _flat, target, keyContext);

			return target;
		}, {}, []);

		return (0, _jsonStringifySafe2['default'])(flatObj);
	};
};
//# sourceMappingURL=serialize.js.map
