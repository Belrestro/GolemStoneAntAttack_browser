{"version":3,"file":"Node.js","sources":["../../../../src/nodes/Node.js"],"sourcesContent":["import { EventEmitter2 } from 'eventemitter2';\nimport * as crc32 from 'buffer-crc32';\nimport { lsrSync, readFileSync, rimraf } from 'sander';\nimport { resolve } from 'path';\nimport * as requireRelative from 'require-relative';\nimport { grab, include, map as mapTransform, move } from '../builtins';\nimport { Observer, Transformer } from './index';\nimport config from '../config';\nimport GobbleError from '../utils/GobbleError';\nimport assign from '../utils/assign';\nimport warnOnce from '../utils/warnOnce';\nimport compareBuffers from '../utils/compareBuffers';\nimport serve from './serve';\nimport build from './build';\nimport watch from './watch';\nimport { isRegExp } from '../utils/is';\nimport { ABORTED } from '../utils/signals';\n\n// TODO remove this in a future version\nfunction enforceCorrectArguments ( options ) {\n\tif ( options !== undefined && typeof options !== 'object' ) {\n\t\tthrow new Error( 'As of gobble 0.9.0, you cannot pass multiple strings to .grab() and .moveTo(). Use path.join() instead' );\n\t}\n}\n\nexport default class Node extends EventEmitter2 {\n\tconstructor () {\n\t\tthis._gobble = true; // makes life easier for e.g. gobble-cli\n\n\t\t// initialise event emitter\n\t\tsuper({ wildcard: true });\n\n\t\tthis.counter = 1;\n\t\tthis.inspectTargets = [];\n\t}\n\n\t// This gets overwritten each time this.ready is overwritten. Until\n\t// the first time that happens, it's a noop\n\t_abort () {}\n\n\t_findCreator () {\n\t\treturn this;\n\t}\n\n\tbuild ( options ) {\n\t\treturn build( this, options );\n\t}\n\n\tcreateWatchTask () {\n\t\tconst node = this;\n\t\tconst watchTask = new EventEmitter2({ wildcard: true });\n\n\t\t// TODO is this the best place to handle this stuff? or is it better\n\t\t// to pass off the info to e.g. gobble-cli?\n\t\tlet previousDetails;\n\n\t\tnode.on( 'info', details => {\n\t\t\tif ( details === previousDetails ) return;\n\t\t\tpreviousDetails = details;\n\t\t\twatchTask.emit( 'info', details );\n\t\t});\n\n\t\tlet buildScheduled;\n\n\t\tnode.on( 'invalidate', changes => {\n\t\t\t// A node can depend on the same source twice, which will result in\n\t\t\t// simultaneous rebuilds unless we defer it to the next tick\n\t\t\tif ( !buildScheduled ) {\n\t\t\t\tbuildScheduled = true;\n\t\t\t\twatchTask.emit( 'info', {\n\t\t\t\t\tchanges,\n\t\t\t\t\tcode: 'BUILD_INVALIDATED'\n\t\t\t\t});\n\n\t\t\t\tprocess.nextTick( build );\n\t\t\t}\n\t\t});\n\n\t\tnode.on( 'error', handleError );\n\n\t\tfunction build () {\n\t\t\tbuildScheduled = false;\n\n\t\t\twatchTask.emit( 'build:start' );\n\n\t\t\tnode.ready()\n\t\t\t\t.then( outputdir => {\n\t\t\t\t\twatchTask.emit( 'build:end', outputdir );\n\t\t\t\t})\n\t\t\t\t.catch( handleError );\n\t\t}\n\n\t\tfunction handleError ( e ) {\n\t\t\tif ( e === ABORTED ) {\n\t\t\t\t// these happen shortly after an invalidation,\n\t\t\t\t// we can ignore them\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\twatchTask.emit( 'error', e );\n\t\t\t}\n\t\t}\n\n\t\twatchTask.close = () => node.stop();\n\n\t\tthis.start();\n\t\tprocess.nextTick( build );\n\n\t\treturn watchTask;\n\t}\n\n\texclude ( patterns, options ) {\n\t\tif ( typeof patterns === 'string' ) { patterns = [ patterns ]; }\n\t\treturn new Transformer( this, include, { patterns, exclude: true, id: options && options.id });\n\t}\n\n\tgetChanges ( inputdir ) {\n\t\tconst files = lsrSync( inputdir );\n\n\t\tif ( !this._files ) {\n\t\t\tthis._files = files;\n\t\t\tthis._checksums = {};\n\n\t\t\tfiles.forEach( file => {\n\t\t\t\tthis._checksums[ file ] = crc32( readFileSync( inputdir, file ) );\n\t\t\t});\n\n\t\t\treturn files.map( file => ({ file, added: true }) );\n\t\t}\n\n\t\tconst added = files.filter( file => !~this._files.indexOf( file ) ).map( file => ({ file, added: true }) );\n\t\tconst removed = this._files.filter( file => !~files.indexOf( file ) ).map( file => ({ file, removed: true }) );\n\n\t\tconst maybeChanged = files.filter( file => ~this._files.indexOf( file ) );\n\n\t\tlet changed = [];\n\n\t\tmaybeChanged.forEach( file => {\n\t\t\tlet checksum = crc32( readFileSync( inputdir, file ) );\n\n\t\t\tif ( !compareBuffers( checksum, this._checksums[ file ] ) ) {\n\t\t\t\tchanged.push({ file, changed: true });\n\t\t\t\tthis._checksums[ file ] = checksum;\n\t\t\t}\n\t\t});\n\n\t\treturn added.concat( removed ).concat( changed );\n\t}\n\n\tgrab ( src, options ) {\n\t\tenforceCorrectArguments( options );\n\t\treturn new Transformer( this, grab, { src, id: options && options.id });\n\t}\n\n\t// Built-in transformers\n\tinclude ( patterns, options ) {\n\t\tif ( typeof patterns === 'string' ) { patterns = [ patterns ]; }\n\t\treturn new Transformer( this, include, { patterns, id: options && options.id });\n\t}\n\n\tinspect ( target, options ) {\n\t\ttarget = resolve( config.cwd, target );\n\n\t\tif ( options && options.clean ) {\n\t\t\trimraf( target );\n\t\t}\n\n\t\tthis.inspectTargets.push( target );\n\t\treturn this; // chainable\n\t}\n\n\tmap ( fn, userOptions ) {\n\t\twarnOnce( 'node.map() is deprecated. You should use node.transform() instead for both file and directory transforms' );\n\t\treturn this.transform( fn, userOptions );\n\t}\n\n\tmoveTo ( dest, options ) {\n\t\tenforceCorrectArguments( options );\n\t\treturn new Transformer( this, move, { dest, id: options && options.id });\n\t}\n\n\tobserve ( fn, userOptions ) {\n\t\tif ( typeof fn === 'string' ) {\n\t\t\tfn = tryToLoad( fn );\n\t\t}\n\n\t\treturn new Observer( this, fn, userOptions );\n\t}\n\n\tobserveIf ( condition, fn, userOptions ) {\n\t\treturn condition ? this.observe( fn, userOptions ) : this;\n\t}\n\n\tserve ( options ) {\n\t\treturn serve( this, options );\n\t}\n\n\ttransform ( fn, userOptions ) {\n\t\tif ( typeof fn === 'string' ) {\n\t\t\t// TODO remove this for 0.9.0\n\t\t\tif ( fn === 'sorcery' ) {\n\t\t\t\twarnOnce( 'Sourcemaps are flattened automatically as of gobble 0.8.0. You should remove the sorcery transformation from your build definition' );\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tfn = tryToLoad( fn );\n\t\t}\n\n\t\t// If function takes fewer than 3 arguments, it's a file transformer\n\t\tif ( fn.length < 3 ) {\n\t\t\tconst options = assign( {}, fn.defaults, userOptions, {\n\t\t\t\tfn,\n\t\t\t\tcache: {},\n\t\t\t\tuserOptions: assign( {}, userOptions )\n\t\t\t});\n\n\t\t\tif ( typeof options.accept === 'string' || isRegExp( options.accept ) ) {\n\t\t\t\toptions.accept = [ options.accept ];\n\t\t\t}\n\n\t\t\treturn new Transformer( this, mapTransform, options, fn.id || fn.name );\n\t\t}\n\n\t\t// Otherwise it's a directory transformer\n\t\treturn new Transformer( this, fn, userOptions );\n\t}\n\n\ttransformIf ( condition, fn, userOptions ) {\n\t\treturn condition ? this.transform( fn, userOptions ) : this;\n\t}\n\n\twatch ( options ) {\n\t\treturn watch( this, options );\n\t}\n}\n\nfunction tryToLoad ( plugin ) {\n\ttry {\n\t\treturn requireRelative( `gobble-${plugin}`, process.cwd() );\n\t} catch ( err ) {\n\t\tif ( err.message === `Cannot find module 'gobble-${plugin}'` ) {\n\t\t\tthrow new GobbleError({\n\t\t\t\tmessage: `Could not load gobble-${plugin} plugin`,\n\t\t\t\tcode: 'PLUGIN_NOT_FOUND',\n\t\t\t\tplugin: plugin\n\t\t\t});\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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"}