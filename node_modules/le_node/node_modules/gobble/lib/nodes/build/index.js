'use strict';

var path = require('path');
var sander = require('sander');
var cleanup = require('../../utils/cleanup');
var session = require('../../session');
var GobbleError = require('../../utils/GobbleError');
var flattenSourcemaps = require('../../utils/flattenSourcemaps');

exports['default'] = function (node, options) {
	if (!options || !options.dest) {
		throw new GobbleError['default']({
			code: "MISSING_DEST_DIR",
			task: "build"
		});
	}

	var gobbledir = path.resolve(options.gobbledir || process.env.GOBBLE_TMP_DIR || ".gobble-build");
	var dest = options.dest;

	// the return value is an EventEmitter...
	var task = session['default'].create({ gobbledir: gobbledir });
	var promise = undefined;
	var previousDetails = undefined;

	function build() {
		task.emit("info", {
			code: "BUILD_START"
		});
		node.start();

		node.on("info", function (details) {
			if (details === previousDetails) return;
			previousDetails = details;
			task.emit("info", details);
		});

		return node.ready().then(function (inputdir) {
			return sander.copydir(inputdir).to(dest).then(function () {
				return flattenSourcemaps['default'](inputdir, dest, dest, task);
			});
		}).then(function () {
			return node.stop();
		}); // TODO should not need to stop...
	}

	promise = cleanup['default'](gobbledir).then(function () {
		return sander.readdir(dest).then(function (files) {
			if (files.length && !options.force) {
				throw new GobbleError['default']({
					message: "destination folder (" + dest + ") is not empty",
					code: "DIR_NOT_EMPTY",
					path: dest
				});
			}

			return cleanup['default'](dest).then(build);
		}, build);
	}).then(function () {
		task.emit("complete");
		session['default'].destroy();
	}, function (err) {
		session['default'].destroy();
		task.emit("error", err);
		throw err;
	});

	// that does double duty as a promise
	task.then = function () {
		return promise.then.apply(promise, arguments);
	};

	task["catch"] = function () {
		return promise["catch"].apply(promise, arguments);
	};

	return task;
};
//# sourceMappingURL=index.js.map
