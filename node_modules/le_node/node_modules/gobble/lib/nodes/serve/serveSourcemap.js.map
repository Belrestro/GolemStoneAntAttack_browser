{"version":3,"file":"serveSourcemap.js","sources":["../../../../../../src/nodes/serve/serveSourcemap.js"],"sourcesContent":["import { load } from 'sorcery';\n\nexport default function serveSourcemap ( filepath, sourcemapPromises, request, response ) {\n\tconst owner = filepath.slice( 0, -4 );\n\n\tif ( !sourcemapPromises[ filepath ] ) {\n\t\tsourcemapPromises[ filepath ] = load( owner )\n\t\t\t.then( chain => {\n\t\t\t\tif ( !chain ) {\n\t\t\t\t\tthrow new Error( 'Could not resolve sourcemap for ' + owner );\n\t\t\t\t}\n\n\t\t\t\treturn chain.apply().toString();\n\t\t\t});\n\t}\n\n\treturn sourcemapPromises[ filepath ].then( map => {\n\t\tresponse.statusCode = 200;\n\t\tresponse.setHeader( 'Content-Type', 'application/json' );\n\n\t\tresponse.write( map );\n\t\tresponse.end();\n\t});\n}"],"names":[],"mappings":";;;;;;qBAEwB;AAAT,SAAS,eAAiB,UAAU,mBAAmB,SAAS,UAAW;AACzF,CAAD,IAAO,QAAQ,SAAS,MAAO,GAAG,CAAC;;AAElC,CAAD,IAAM,CAAC,kBAAmB,WAAa;AACrC,EAAF,kBAAqB,wBAAiB,CAAE,OACpC,KAAM,UAAA,OAAS;AACf,GAAJ,IAAS,CAAC,OAAQ;AACb,IAAL,MAAW,IAAI,MAAO,qCAAqC;AAC3D;;AAEI,GAAJ,OAAW,MAAM,QAAQ;AACzB;AACA;;AAEC,CAAD,OAAQ,kBAAmB,UAAW,KAAM,UAAA,KAAO;AACjD,EAAF,SAAW,aAAa;AACtB,EAAF,SAAW,UAAW,gBAAgB;;AAEpC,EAAF,SAAW,MAAO;AAChB,EAAF,SAAW;AACX;AACA"}