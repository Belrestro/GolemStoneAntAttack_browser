{"version":3,"file":"serveError.js","sources":["../../../../../../src/nodes/serve/serveError.js"],"sourcesContent":["import errTemplate from './templates/err';\nimport waitingTemplate from './templates/waiting';\nimport notfoundTemplate from './templates/notfound';\n\nconst entities = {\n\t'&': '&amp;',\n\t'<': '&lt;',\n\t'>': '&gt;',\n\t'\"': '&quot;',\n\t\"'\": '&#39;',\n\t'/': '&#x2F;'\n};\n\nconst colors = {\n\t37: 'white',\n\t90: 'grey',\n\t30: 'black',\n\t34: 'blue',\n\t36: 'cyan',\n\t32: 'green',\n\t35: 'magenta',\n\t31: 'red',\n\t33: 'yellow'\n};\n\nexport default function serveError ( error, request, response ) {\n\tlet html; // should be a block-scoped const, but jshint...\n\n\tif ( error.gobble === 'WAITING' ) {\n\t\tresponse.statusCode = 420;\n\t\tresponse.write( waitingTemplate() );\n\n\t\tresponse.end();\n\t}\n\n\telse if ( error.code === 'ENOENT' ) {\n\t\thtml = notfoundTemplate({\n\t\t\tpath: error.path\n\t\t});\n\n\t\tresponse.statusCode = 404;\n\t\tresponse.write( html );\n\n\t\tresponse.end();\n\t}\n\n\telse {\n\t\tconst message = escape( error.original ? error.original.message || error.original : error.message || error );\n\t\tconst filename = error.original ? error.original.filename : error.filename;\n\n\t\thtml = errTemplate({\n\t\t\tid: error.id,\n\t\t\tmessage: message.replace( /\\[(\\d+)m/g, ( match, $1 ) => {\n\t\t\t\tlet color;\n\n\t\t\t\tif ( match === '[39m' ) {\n\t\t\t\t\treturn '</span>';\n\t\t\t\t}\n\n\t\t\t\tif ( color = colors[ $1 ] ) {\n\t\t\t\t\treturn `<span style=\"color:${color};\">`;\n\t\t\t\t}\n\n\t\t\t\treturn '';\n\t\t\t}), // remove colors\n\t\t\tstack: prepareStack( error.stack ),\n\t\t\tfilemessage: filename ? `<p>The error occurred while processing <strong>${filename}</strong>.</p>` : ''\n\t\t});\n\n\t\t// turn filepaths into links\n\t\thtml = html.replace( /([>\\s\\(])(&#x2F[^\\s\\):<]+)/g, ( match, $1, $2 ) => {\n\t\t\treturn `${$1}<a href=\"/__gobble__${$2}\">${$2}</a>`;\n\t\t});\n\n\t\tresponse.statusCode = 500;\n\t\tresponse.write( html );\n\n\t\tresponse.end();\n\t}\n}\n\nfunction prepareStack ( stack ) {\n\treturn stack.split( '\\n' )\n\t\t.filter( line => line !== 'Error' )\n\t\t.map( line => `<li>${escape( line.trim() )}</li>` )\n\t\t.join( '' );\n}\n\nfunction escape ( str ) {\n\treturn ( str || '' ).replace( /[&<>\"'\\/]/g, char => entities[ char ] );\n}\n"],"names":[],"mappings":";;;;;;;;qBAyBwB;;AArBxB,IAAM,WAAW;AAChB,CAAD,KAAM;AACL,CAAD,KAAM;AACL,CAAD,KAAM;AACL,CAAD,MAAM;AACL,CAAD,KAAM;AACL,CAAD,KAAM;AACN;;AAEA,IAAM,SAAS;AACd,CAAD,IAAK;AACJ,CAAD,IAAK;AACJ,CAAD,IAAK;AACJ,CAAD,IAAK;AACJ,CAAD,IAAK;AACJ,CAAD,IAAK;AACJ,CAAD,IAAK;AACJ,CAAD,IAAK;AACJ,CAAD,IAAK;AACL;AAEe,SAAS,WAAa,OAAO,SAAS,UAAW;AAC/D,CAAD,IAAK,OAAL;;AAEC,CAAD,IAAM,MAAM,WAAW,WAAY;AACjC,EAAF,SAAW,aAAa;AACtB,EAAF,SAAW,gCAAsB;;AAE/B,EAAF,SAAW;AACX,QAEM,IAAK,MAAM,SAAS,UAAW;AACnC,EAAF,kCAAyB,CAAC;AACvB,GAAH,MAAS,MAAM;AACf;;AAEE,EAAF,SAAW,aAAa;AACtB,EAAF,SAAW,MAAO;;AAEhB,EAAF,SAAW;AACX,QAEM;AACJ,EAAF,IAAQ,UAAU,OAAQ,MAAM,WAAW,MAAM,SAAS,WAAW,MAAM,WAAW,MAAM,WAAW;AACrG,EAAF,IAAQ,WAAW,MAAM,WAAW,MAAM,SAAS,WAAW,MAAM;;AAElE,EAAF,6BAAoB,CAAC;AAClB,GAAH,IAAO,MAAM;AACV,GAAH,SAAY,QAAQ,QAAS,aAAa,UAAE,OAAO,IAAQ;AACvD,IAAJ,IAAQ,QAAR;;AAEI,IAAJ,IAAS,UAAU,QAAS;AACvB,KAAL,OAAY;AACZ;;AAEI,IAAJ,IAAS,QAAQ,OAAQ,KAAO;AAC3B,KAAL,OAAA,yBAAkC,QAAlC;AACA;;AAEI,IAAJ,OAAW;AACX;AACG,GAAH,OAAU,aAAc,MAAM;AAC3B,GAAH,aAAgB,WAAhB,oDAA6E,WAA7E,mBAAwG;AACxG;;;AAGE,EAAF,OAAS,KAAK,QAAS,+BAA+B,UAAE,OAAO,IAAI,IAAQ;AACxE,GAAH,OAAA,KAAa,KAAb,0BAAsC,KAAtC,QAA6C,KAA7C;AACA;;AAEE,EAAF,SAAW,aAAa;AACtB,EAAF,SAAW,MAAO;;AAEhB,EAAF,SAAW;AACX;AACA;;AAEA,SAAS,aAAe,OAAQ;AAC/B,CAAD,OAAQ,MAAM,MAAO,MAClB,OAAQ,UAAA,MADX;AACA,EAAA,OAAmB,SAAS;AAA5B,IACG,IAAK,UAAA,MADR;AACA,EAAA,OAAA,SAAuB,OAAQ,KAAK,UAApC;AAAA,IACG,KAAM;AACT;;AAEA,SAAS,OAAS,KAAM;AACvB,CAAD,OAAQ,CAAE,OAAO,IAAK,QAAS,cAAc,UAAA,MAA7C;AAAA,EAAA,OAAqD,SAAU;AAA/D;AACA"}