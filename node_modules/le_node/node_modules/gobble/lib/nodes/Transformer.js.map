{"version":3,"file":"Transformer.js","sources":["../../../../src/nodes/Transformer.js"],"sourcesContent":["import { join, resolve } from 'path';\nimport * as sander from 'sander';\nimport { mkdir, readdirSync, rimrafSync } from 'sander';\nimport Node from './Node';\nimport session from '../session';\nimport queue from '../queue';\nimport GobbleError from '../utils/GobbleError';\nimport assign from '../utils/assign';\nimport uid from '../utils/uid';\nimport makeLog from '../utils/makeLog';\nimport config from '../config';\nimport warnOnce from '../utils/warnOnce';\nimport extractLocationInfo from '../utils/extractLocationInfo';\nimport { ABORTED } from '../utils/signals';\n\nexport default class Transformer extends Node {\n\tconstructor ( input, transformer, options, id ) {\n\t\tsuper();\n\n\t\tthis.input = input;\n\n\t\tthis.transformer = transformer;\n\t\tthis.options = assign( {}, options );\n\n\t\tthis.name = id || this.options.id || transformer.id || transformer.name || 'unknown';\n\t\tthis.id = uid( this.name );\n\n\t\t// Double callback style deprecated as of 0.6.x. TODO remove this eventually\n\t\tif ( transformer.length === 5 ) {\n\t\t\twarnOnce( 'The gobble plugin API has changed - the \"%s\" transformer should take a single callback. See https://github.com/gobblejs/gobble/wiki/Troubleshooting for more info', this.name );\n\n\t\t\tthis.transformer = ( inputdir, outputdir, options, callback ) => {\n\t\t\t\treturn transformer.call( this, inputdir, outputdir, options, () => callback(), callback );\n\t\t\t};\n\t\t}\n\t}\n\n\tready () {\n\t\tlet outputdir;\n\t\tlet transformation;\n\n\t\tif ( !this._ready ) {\n\t\t\ttransformation = {\n\t\t\t\tnode: this,\n\t\t\t\tcachedir: resolve( session.config.gobbledir, this.id, '.cache' ),\n\t\t\t\tlog: makeLog( this ),\n\t\t\t\tenv: config.env,\n\t\t\t\tsander: sander\n\t\t\t};\n\n\t\t\tthis._abort = () => {\n\t\t\t\tthis._ready = null;\n\t\t\t\ttransformation.aborted = true;\n\t\t\t};\n\n\t\t\toutputdir = resolve( session.config.gobbledir, this.id, '' + this.counter++ );\n\n\t\t\tthis._ready = this.input.ready().then( inputdir => {\n\t\t\t\treturn mkdir( outputdir ).then( () => {\n\t\t\t\t\treturn queue.add( ( fulfil, reject ) => {\n\t\t\t\t\t\tthis.emit( 'info', {\n\t\t\t\t\t\t\tcode: 'TRANSFORM_START',\n\t\t\t\t\t\t\tprogressIndicator: true,\n\t\t\t\t\t\t\tid: this.id\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst start = Date.now();\n\t\t\t\t\t\tlet called = false;\n\n\t\t\t\t\t\tconst callback = err => {\n\t\t\t\t\t\t\tif ( called ) return;\n\t\t\t\t\t\t\tcalled = true;\n\n\t\t\t\t\t\t\tif ( transformation.aborted ) {\n\t\t\t\t\t\t\t\treject( ABORTED );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\telse if ( err ) {\n\t\t\t\t\t\t\t\tlet stack = err.stack || new Error().stack;\n\t\t\t\t\t\t\t\tlet { file, line, column } = extractLocationInfo( err );\n\n\t\t\t\t\t\t\t\tlet gobbleError = new GobbleError({\n\t\t\t\t\t\t\t\t\tinputdir, outputdir,\n\t\t\t\t\t\t\t\t\tstack, file, line, column,\n\t\t\t\t\t\t\t\t\tmessage: 'transformation failed',\n\t\t\t\t\t\t\t\t\tid: this.id,\n\t\t\t\t\t\t\t\t\tcode: 'TRANSFORMATION_FAILED',\n\t\t\t\t\t\t\t\t\toriginal: err\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\treject( gobbleError );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.emit( 'info', {\n\t\t\t\t\t\t\t\t\tcode: 'TRANSFORM_COMPLETE',\n\t\t\t\t\t\t\t\t\tid: this.id,\n\t\t\t\t\t\t\t\t\tduration: Date.now() - start\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tthis._cleanup( outputdir );\n\t\t\t\t\t\t\t\tfulfil( outputdir );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\ttransformation.changes = this.input.changes || this.getChanges( inputdir );\n\n\t\t\t\t\t\t\tconst promise = this.transformer.call( transformation, inputdir, outputdir, assign({}, this.options ), callback );\n\n\t\t\t\t\t\t\tif ( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\t\tpromise.then( () => callback(), callback );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch ( err ) {\n\t\t\t\t\t\t\tcallback( err );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn this._ready;\n\t}\n\n\tstart () {\n\t\tif ( this._active ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._active = true;\n\n\t\t// Propagate invalidation events and information\n\t\tthis._oninvalidate = changes => {\n\t\t\tthis._abort();\n\t\t\tthis.emit( 'invalidate', changes );\n\t\t};\n\n\t\tthis._oninfo = details => this.emit( 'info', details );\n\n\t\tthis.input.on( 'invalidate', this._oninvalidate );\n\t\tthis.input.on( 'info', this._oninfo );\n\n\t\treturn mkdir( session.config.gobbledir, this.id ).then( () => this.input.start() );\n\t}\n\n\tstop () {\n\t\tthis.input.off( 'invalidate', this._oninvalidate );\n\t\tthis.input.off( 'info', this._oninfo );\n\n\t\tthis.input.stop();\n\t\tthis._active = false;\n\t}\n\n\tactive () {\n\t\treturn this._active;\n\t}\n\n\t_cleanup ( latest ) {\n\t\tconst dir = join( session.config.gobbledir, this.id );\n\n\t\t// Remove everything except the last successful outputdir and the cachedir\n\t\t// Use readdirSync to eliminate race conditions\n\t\treaddirSync( dir )\n\t\t\t.filter( file => file !== '.cache' && resolve( dir, file ) !== latest )\n\t\t\t.forEach( file => rimrafSync( dir, file ) );\n\t}\n}\n"],"names":[],"mappings":"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"}