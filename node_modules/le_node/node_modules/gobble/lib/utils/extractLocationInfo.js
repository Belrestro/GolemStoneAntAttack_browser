'use strict';

/**
 * Extracts location info from error objects using a set of heuristics
   based on real-world examples
 * @param {object} err - an error object thrown by a transpiler
 * @returns {file, line, column}
 */
exports['default'] = extractLocationInfo;

function extractLocationInfo(err) {
	var file = err.file;
	var line = err.line;
	var column = err.column;
	var message = err.message;
	var loc = err.loc;

	if (!file && err.filename) {
		file = err.filename;
	}

	if (line === undefined && column === undefined && loc) {
		line = loc.line;
		column = loc.column;
	}

	var match = undefined;

	if (line === undefined) {
		if (match = /line (\d+)/.exec(message)) {
			line = +match[1];
		}
	}

	if (column === undefined) {
		if (match = /column (\d+)/.exec(message)) {
			column = +match[1];
		}
	}

	// Handle errors from e.g. browserify
	// Unexpected token (123:456) while parsing /path/to/.gobble/12-derequire/1/app.js
	if (line === undefined && column === undefined) {
		var _match = /(\d+):(\d+)/.exec(message);

		if (_match) {
			line = _match[1];
			column = _match[2];
		}
	}

	return { file: file, line: line, column: column };
}
//# sourceMappingURL=extractLocationInfo.js.map
