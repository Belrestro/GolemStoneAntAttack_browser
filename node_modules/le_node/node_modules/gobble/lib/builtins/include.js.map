{"version":3,"file":"include.js","sources":["../../../../src/builtins/include.js"],"sourcesContent":["import { dirname } from 'path';\nimport { lsr, mkdir, symlinkOrCopy, Promise } from 'sander';\nimport *  as minimatch from 'minimatch';\n\nexport default function include ( inputdir, outputdir, options ) {\n\tconst numPatterns = options.patterns.length;\n\n\treturn lsr( inputdir )\n\t\t.then( files => {\n\t\t\treturn files.filter( file => {\n\t\t\t\tconst isIncluded = matches( file );\n\t\t\t\treturn options.exclude ? !isIncluded : isIncluded;\n\t\t\t});\n\t\t})\n\t\t.then( files => {\n\t\t\tconst promises = files.map( file => {\n\t\t\t\treturn mkdir( outputdir, dirname( file ) ).then( () => {\n\t\t\t\t\treturn symlinkOrCopy( inputdir, file ).to( outputdir, file );\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn Promise.all( promises );\n\t\t});\n\n\tfunction matches ( filename ) {\n\t\tlet i = numPatterns;\n\t\twhile ( i-- ) {\n\t\t\tif ( minimatch( filename, options.patterns[i] ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"],"names":[],"mappings":";;;;;;;;qBAIwB;AAAT,SAAS,QAAU,UAAU,WAAW,SAAU;AAChE,CAAD,IAAO,cAAc,QAAQ,SAAS;;AAErC,CAAD,iBAAW,CAAE,UACV,KAAM,UAAA,OAAS;AACf,EAAH,OAAU,MAAM,OAAQ,UAAA,MAAQ;AAC5B,GAAJ,IAAU,aAAa,QAAS;AAC5B,GAAJ,OAAW,QAAQ,UAAU,CAAC,aAAa;AAC3C;AACA,IACG,KAAM,UAAA,OAAS;AACf,EAAH,IAAS,WAAW,MAAM,IAAK,UAAA,MAAQ;AACnC,GAAJ,mBAAgB,CAAE,uBAAkB,CAAE,OAAS,KAAM,YAAM;AACtD,IAAL,2BAAyB,CAAE,UAAU,MAAO,GAAI,WAAW;AAC3D;AACA;;AAEG,EAAH,qBAAiB,CAAC,IAAK;AACvB;;AAEC,CAAD,SAAU,QAAU,UAAW;AAC7B,EAAF,IAAM,IAAI;AACR,EAAF,OAAU,KAAM;AACb,GAAH,IAAQ,UAAW,UAAU,QAAQ,SAAS,KAAO;AACjD,IAAJ,OAAW;AACX;AACA;;AAEE,EAAF,OAAS;AACT;AACA"}