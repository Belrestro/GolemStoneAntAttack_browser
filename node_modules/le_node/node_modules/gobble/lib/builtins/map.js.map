{"version":3,"file":"map.js","sources":["../../../../src/builtins/map.js"],"sourcesContent":["import { extname, join, resolve } from 'path';\nimport * as chalk from 'chalk';\nimport Queue from '../queue/Queue';\nimport { lsr, readFile, symlinkOrCopy, writeFile, Promise } from 'sander';\nimport assign from '../utils/assign';\nimport config from '../config';\nimport extractLocationInfo from '../utils/extractLocationInfo';\nimport { isRegExp } from '../utils/is';\nimport { ABORTED } from '../utils/signals';\nimport { getSourcemapComment, SOURCEMAP_COMMENT } from '../utils/sourcemap';\n\nexport default function map ( inputdir, outputdir, options ) {\n\tlet changed = {};\n\tthis.changes.forEach( change => {\n\t\tif ( !change.removed ) {\n\t\t\tchanged[ change.file ] = true;\n\t\t}\n\t});\n\n\treturn new Promise( ( fulfil, reject ) => {\n\t\tconst queue = new Queue();\n\n\t\tqueue.once( 'error', reject );\n\n\t\tlsr( inputdir ).then( files => {\n\t\t\tconst promises = files.map( filename => {\n\t\t\t\tif ( this.aborted ) return;\n\n\t\t\t\tconst ext = extname( filename );\n\n\t\t\t\t// change extension if necessary, e.g. foo.coffee -> foo.js\n\t\t\t\tconst destname = ( options.ext && ~options.accept.indexOf( ext ) ) ? filename.substr( 0, filename.length - ext.length ) + options.ext : filename;\n\n\t\t\t\tconst src = join( inputdir, filename );\n\t\t\t\tconst dest = join( outputdir, destname );\n\n\t\t\t\t// If this mapper only accepts certain extensions, and this isn't\n\t\t\t\t// one of them, just copy the file\n\t\t\t\tif ( shouldSkip( options, ext, filename ) ) {\n\t\t\t\t\treturn symlinkOrCopy( src ).to( dest );\n\t\t\t\t}\n\n\t\t\t\t// If this file *does* fall within this transformer's remit, but\n\t\t\t\t// hasn't changed, we just copy the cached file\n\t\t\t\tif ( !changed[ filename ] && options.cache.hasOwnProperty( filename ) ) {\n\t\t\t\t\treturn symlinkOrCopy( options.cache[ filename ] ).to( dest );\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, we queue up a transformation\n\t\t\t\treturn queue.add( ( fulfil, reject ) => {\n\t\t\t\t\tif ( this.aborted ) {\n\t\t\t\t\t\treturn reject( ABORTED );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create context object - this will be passed to transformers\n\t\t\t\t\tconst context = {\n\t\t\t\t\t\tlog: this.log,\n\t\t\t\t\t\tenv: config.env,\n\t\t\t\t\t\tsrc, dest, filename\n\t\t\t\t\t};\n\n\t\t\t\t\tconst transformOptions = assign( {}, options.fn.defaults, options.userOptions );\n\n\t\t\t\t\tdelete transformOptions.accept;\n\t\t\t\t\tdelete transformOptions.ext;\n\n\t\t\t\t\treturn readFile( src )\n\t\t\t\t\t\t.then( buffer => buffer.toString( transformOptions.sourceEncoding ) )\n\t\t\t\t\t\t.then( data => {\n\t\t\t\t\t\t\tif ( this.aborted ) return reject( ABORTED );\n\n\t\t\t\t\t\t\tlet result;\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresult = options.fn.call( context, data, transformOptions );\n\t\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\t\tlet err = createTransformError( e, src, filename, this.node );\n\t\t\t\t\t\t\t\treturn reject( err );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst codepath = resolve( this.cachedir, filename );\n\n\t\t\t\t\t\t\tconst { code, map } = processResult( result, data, src, dest, codepath );\n\n\t\t\t\t\t\t\twriteToCacheDir( code, map, codepath, dest )\n\t\t\t\t\t\t\t\t.then( () => symlinkOrCopy( codepath ).to( dest ) )\n\t\t\t\t\t\t\t\t.then( () => options.cache[ filename ] = codepath )\n\t\t\t\t\t\t\t\t.then( fulfil );\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch( reject );\n\t\t\t\t}).catch( err => {\n\t\t\t\t\tqueue.abort();\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn Promise.all( promises );\n\t\t}).then( () => {\n\t\t\tqueue.off( 'error', reject );\n\t\t\tfulfil();\n\t\t}, reject );\n\t});\n}\n\nfunction processResult ( result, original, src, dest, codepath ) {\n\tif ( typeof result === 'object' && 'code' in result ) {\n\t\t// if a sourcemap was returned, use it\n\t\tif ( result.map ) {\n\t\t\treturn {\n\t\t\t\tcode: result.code.replace( SOURCEMAP_COMMENT, '' ) + getSourcemapComment( encodeURI( codepath + '.map' ), extname( codepath ) ),\n\t\t\t\tmap: processSourcemap( result.map, src, dest, original )\n\t\t\t};\n\t\t}\n\n\t\t// otherwise we might have an inline sourcemap\n\t\telse {\n\t\t\treturn processInlineSourceMap( result.code, src, dest, original, codepath );\n\t\t}\n\t}\n\n\tif ( typeof result === 'string' ) {\n\t\treturn processInlineSourceMap( result, src, dest, original, codepath );\n\t}\n\n\treturn { code: result, map: null };\n}\n\nfunction isDataURI ( str ) {\n\treturn /^data:/.test( str ); // TODO beef this up\n}\n\nfunction processInlineSourceMap ( code, src, dest, original, codepath ) {\n\t// if there's an inline sourcemap, process it\n\tlet match = SOURCEMAP_COMMENT.exec( code );\n\tlet map = null;\n\n\tif ( match && isDataURI( match[1] ) ) {\n\t\tmatch = /base64,(.+)$/.exec( match[1] );\n\n\t\tif ( !match ) {\n\t\t\tthrow new Error( 'sourceMappingURL is not base64-encoded' );\n\t\t}\n\n\t\tlet json = atob( match[1] );\n\n\t\tmap = processSourcemap( json, src, dest, original );\n\t\tcode = code.replace( SOURCEMAP_COMMENT, '' ) + getSourcemapComment( encodeURI( codepath + '.map' ), extname( codepath ) );\n\t}\n\n\treturn { code, map };\n}\n\nfunction writeToCacheDir ( code, map, codepath ) {\n\tif ( map ) {\n\t\treturn Promise.all([\n\t\t\twriteFile( codepath, code ),\n\t\t\twriteFile( codepath + '.map', JSON.stringify( map ) )\n\t\t]);\n\t} else {\n\t\treturn writeFile( codepath, code );\n\t}\n}\n\nfunction createTransformError ( original, src, filename, node ) {\n\tconst err = typeof original === 'string' ? new Error( original ) : original;\n\n\tlet message = 'An error occurred while processing ' + chalk.magenta( src );\n\tlet creator;\n\n\tif ( creator = node.input._findCreator( filename ) ) {\n\t\tmessage += ` (this file was created by the ${creator.id} transformation)`;\n\t}\n\n\tconst { line, column } = extractLocationInfo( err );\n\n\terr.file = src;\n\terr.line = line;\n\terr.column = column;\n\n\treturn err;\n}\n\nfunction processSourcemap ( map, src, dest, data ) {\n\tif ( typeof map === 'string' ) {\n\t\tmap = JSON.parse( map );\n\t}\n\n\tif ( !map ) {\n\t\treturn null;\n\t}\n\n\tmap.file = dest;\n\tmap.sources = [ src ];\n\tmap.sourcesContent = [ data ];\n\treturn map;\n}\n\nfunction shouldSkip ( options, ext, filename ) {\n\tlet filter;\n\n\tif ( filter = options.accept ) {\n\t\tlet i;\n\n\t\tfor ( i=0; i<filter.length; i++ ) {\n\t\t\tconst flt = filter[i];\n\n\t\t\tif ( typeof flt === 'string' && flt === ext ) {\n\t\t\t\treturn false;\n\t\t\t} else if ( isRegExp( flt ) && flt.test( filename ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction atob ( base64 ) {\n\treturn new Buffer( base64, 'base64' ).toString( 'utf8' );\n}\n"],"names":[],"mappings":"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"}